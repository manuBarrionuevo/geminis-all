name: CI para Backend

on:
  push:
    branches:
      - 'develop'
  pull_request:
    branches:
      - 'develop'

jobs:
  build-and-test:
    name: Construir y Probar
    runs-on: ubuntu-latest

    steps:
      - name: Extraer código
        uses: actions/checkout@v4

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Construir imagen Docker
        run: docker build -t geminis-backend:latest -f RoadRunner.Dockerfile .

      - name: Crear red Docker
        run: docker network create github_network

      - name: Iniciar contenedor MySQL
        run: docker run -d --name mysql --network github_network -e MYSQL_ROOT_PASSWORD=secret -e MYSQL_DATABASE=geminis -e MYSQL_USER=userGeminis -e MYSQL_PASSWORD=secret mysql:8

      - name: Esperar a que MySQL esté listo
        run: |
          until docker run --rm --network github_network mysql:8 mysqladmin ping -h mysql --silent; do
            echo "Esperando a que MySQL esté listo..."
            sleep 5
          done
          echo "¡MySQL está listo!"

      - name: Iniciar contenedor backend
        run: docker run -d --name geminis-backend --network github_network geminis-backend:latest

      - name: Configurar y verificar el entorno
        run: |
          docker cp backend/.env.example geminis-backend:/var/www/.env
          docker exec geminis-backend sed -i 's/DB_HOST=127.0.0.1/DB_HOST=mysql/' /var/www/.env
          docker exec geminis-backend php artisan key:generate
          docker exec geminis-backend cat /var/www/.env
          docker exec geminis-backend sh -c "mysql -hmysql -uuserGeminis -psecret -e 'SHOW DATABASES;'"

      - name: Ejecutar migraciones
        run: docker exec geminis-backend php artisan migrate --force

      - name: Ejecutar pruebas unitarias
        run: docker exec geminis-backend vendor/bin/phpunit

      - name: Limpiar contenedores y red Docker
        if: always()
        run: |
          docker rm -f geminis-backend || true
          docker rm -f mysql || true
          docker network rm github_network || true
